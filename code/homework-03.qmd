---
title: "Homework 3"
author: "Christopher Kiorlinski"
date: "5/28/2025"
format:
  html:
    toc: true # use this to display a table of contents
execute:
  message: false # use this to make sure messages don't show up
  warning: false # use this to make sure warnings don't show up
---

**Repository:** <https://github.com/ckiorlinski/ENVS-193DS_homework-03>

# Set up

```{r packages-and-data}
# reading in packages
library(tidyverse) # general use
library(here) # file organization
library(janitor) # cleaning data frames
library(gt) # table making
library(readxl) # reading excel files
library(ggeffects) # getting model predictions

reaction_time_data <- read.csv("C:/Users/prais/OneDrive/github/ENVS-193DS_homework-03/data/193ds spread - Sheet1.csv") |> #adding table to environment 
clean_names() |> 
     mutate(
    sleep_duration_hrs = period_to_seconds(hm(sleep_duration_hh_ss)) / 3600,
    Sleep_Duration_c   = scale(sleep_duration_hrs, center = TRUE, scale = FALSE),
    Sleep_Location     = factor(sleep_location),
    Stress_Level       = factor(stress_level),
    Date               = as.Date(date, format = "%Y-%m-%d")) |> #
  mutate(
    SleepBin = case_when(
      sleep_duration_hrs < 7  ~ "Short (<7 h)",
      sleep_duration_hrs <= 8 ~ "Moderate (7–8 h)",
      TRUE                     ~ "Long (>8 h)"),
    SleepBin = factor(
      SleepBin,
      levels = c("Short (<7 h)", "Moderate (7–8 h)", "Long (>8 h)"))) |> #
      select(SleepBin, Date, sleep_duration_hh_ss, reaction_speed_ms, x5_test_avg_ms, sleep_location, stress_level) #
```

# Problem 1: Personal Data

## a. 

I could bin recorded days into different sleep lengths, such as "Short (>7 hours)", "Moderate (7-8 hours)", and "Long (<8 hours)", and then find the mean sleep time within each bin because I generally feel more alert when I have had more sleep, so I think Long sleep length will have the best reaction times.

## b.

```{r}
# creating summary table
summary_table <- reaction_time_data |> #
  group_by(SleepBin) |> #
  summarize( #
    mean_rt = mean(reaction_speed_ms, na.rm = TRUE), #
    se = sd(reaction_speed_ms, na.rm = TRUE)/sqrt(n()), #
    n = n()
  ) |> 
  mutate( #
    ci_low  = mean_rt - qt(0.975, n-1) * se, #
    ci_high = mean_rt + qt(0.975, n-1) * se #
  )

#plotting graph
ggplot() +
  geom_jitter(
    data = reaction_time_data,
    aes(x = SleepBin, y = reaction_speed_ms, color = SleepBin),
    width = 0.2, alpha = 0.6, size = 2
  ) +
  geom_point(
    data = summary_table,
    aes(x = SleepBin, y = mean_rt),
    color = "black", shape = 18, size = 4
  ) +
  geom_errorbar(
    data = summary_table,
    aes(x = SleepBin, ymin = ci_low, ymax = ci_high),
    width = 0.1, color = "black"
  ) +
  scale_color_manual(
    values = c(
      "Short (<7 h)"     = "#D55E00",
      "Moderate (7–8 h)" = "#E69F00",
      "Long (>8 h)"      = "#0072B2"
    ),
    guide = FALSE
  ) +
  labs(
    x     = "Sleep Duration Category",
    y     = "Reaction Speed (milliseconds)",
    title = "Reaction Speed Varies Across Sleep Duration",
    caption = "Dots = individual days; black diamonds = group means with 95% CI"
  ) +
  theme_bw() + #
  theme(plot.caption.position = "plot", #
        plot.caption = element_text(hjust = .5))

#creating presentable table

summary_table |> 
  select(SleepBin, mean_rt, ci_low, ci_high) |> 
  gt() |> 
  cols_label(
    SleepBin = "Sleep Category",
    mean_rt  = "Mean Reaction Time (ms)",
    ci_low   = "95% CI Lower",
    ci_high  = "95% CI Upper"
  ) |> 
  tab_header(
    title = "Reaction Speed Summary by Sleep Category"
  ) |> 
  fmt_number(
    columns = c("mean_rt", "ci_low", "ci_high"),
    decimals = 1
  )

```


